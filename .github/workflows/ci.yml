name: "clamscan-docker ci"

on: [push]

jobs:

  build-image:
    runs-on: ubuntu-latest
    steps:    
      - name: Checkout source code
        uses: actions/checkout@v2
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1      
  
      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          context: ./image/
          push: false
          tags: abesesr/clamscan-docker:fortest
          outputs: type=docker,dest=/tmp/image-app.tar

      - name: Upload docker image
        uses: actions/upload-artifact@v2
        with:
          name: image-app.tar
          path: /tmp/image-app.tar
          retention-days: 1
          
  test-image:
    needs: [build-image]
    runs-on: ubuntu-latest
    steps:
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1      

      - name: Download docker image
        uses: actions/download-artifact@v2
        with:
          name: image-app.tar
          path: /tmp

      - name: Load docker image
        run: |
          docker load --input /tmp/image-app.tar
      - name: Debug
        run: |
          docker images
          docker ps -a

      - name: Download a virus (just for test !)
        run: |
          curl -L "https://github.com/ytisf/theZoo/blob/dd88d539de6c91e39483848fa0bd2fe859009c3e/malware/Binaries/Win32.LuckyCat/Win32.LuckyCat.zip?raw=true" > /tmp/Win32.LuckyCat.zip
          cd /tmp/ && unzip -P infected ./Win32.LuckyCat.zip
      - name: Run clamscan on this folder (contains the virus)
        run: |
          docker container run -d --rm --name clamscan-docker -v /tmp/:/folder-to-scan/ -e SCAN_AT_STARTUP="1" -e FRESHCLAM_AT_STARTUP="1" -e CRON_CLAMSCAN="0 0 * * *" -e SMTP_HOST="" -e SMTP_PORT="" abesesr/clamscan-docker:fortest
          docker ps
          sleep 60 && docker logs clamscan-docker
      - name: "1st test: 1 running container?"
        run: |
          NB_CONTAINERS=$(docker ps | grep " Up " | wc -l)
          test $NB_CONTAINERS = 1
      - name: "2nd test: clamscan-docker well scan the given folder"
        run: |
          test "$(docker logs clamscan-docker | grep 'SCAN SUMMARY')" = '----------- SCAN SUMMARY -----------'
      - name: "3rd test: clamscan-docker well detect the virus (1 file)"
        run: |
          test "$(docker logs clamscan-docker | grep 'Infected files' | grep '1')" != ''


  push-image:
    needs: [test-image]
    runs-on: ubuntu-latest
    steps:    
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Download docker image
        uses: actions/download-artifact@v2
        with:
          name: image-app.tar
          path: /tmp

      - name: Load docker image
        run: |
          docker load --input /tmp/image-app.tar

      - name: Get docker metadata from git tags/branchs
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: abesesr/clamscan-docker
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: ./image/
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}        
